{"version":3,"sources":["server.js"],"names":[],"mappings":";;;;oBAAsB,MAAM;;IAAhB,IAAI;;oBACM,MAAM;;IAAhB,IAAI;;gCACkB,oBAAoB;;IAA1C,gBAAgB;;AAE5B,gBAAgB,CAAC,OAAO,EAAE,CAAA;;AAE1B,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC;AAC3B,OAAK,EAAE;AACL,WAAO,EAAE,CAAC,OAAO,CAAC;GACnB;CACF,CAAC,CAAA;;AAEF,IAAI,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAA;;AAExD,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAA;AACvC,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,WAAW,CAAA;;AAE9C,MAAM,CAAC,UAAU,CAAC;AAChB,MAAI,EAAE,IAAI;AACV,MAAI,EAAE,IAAI;CACX,CAAC,CAAA;;AAEF,IAAI,OAAO,GAAG,CACZ,OAAO,CAAC,OAAO,CAAC;AAChB,OAAO,CAAC,QAAQ,CAAC;AACjB,OAAO,CAAC,gBAAgB,CAAC,EACzB,OAAO,CAAC,uBAAuB,CAAC,EAChC,OAAO,CAAC,oBAAoB,CAAC,CAC9B,CAAA;;AAED,IAAI,CAAC,YAAY,EAAE;AACjB,SAAO,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAA;AAC7C,SAAO,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAA;CACjD;;AAED,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAC,GAAG,EAAK;AAChC,MAAI,GAAG,EAAE;AACP,WAAO,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAA;GACrD;AACD,QAAM,CAAC,KAAK,CAAC,UAAC,GAAG,EAAK;AACpB,QAAI,GAAG,EAAE;AACP,aAAO,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAA;KACtD;;;AAGD,WAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,CAAA;GACjE,CAAC,CAAA;CACH,CAAC,CAAA;;AAEF,MAAM,CAAC,KAAK,CAAC;AACX,SAAO,EAAE;AACP,QAAI,EAAE,OAAO,CAAC,YAAY,CAAC;GAC5B;AACD,UAAQ,EAAE,KAAK;AACf,MAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;CACpC,CAAC,CAAA","file":"server.js","sourcesContent":["import * as hapi from 'hapi'\nimport * as path from 'path'\nimport * as sourceMapSupport from 'source-map-support'\n\nsourceMapSupport.install()\n\nvar server = new hapi.Server({\n  debug: {\n    request: ['error']\n  }\n})\n\nvar inProduction = process.env.NODE_ENV === 'production'\n\nvar port = process.env.APP_PORT || 8000\nvar host = process.env.APP_HOST || 'localhost'\n\nserver.connection({\n  port: port,\n  host: host\n})\n\nvar plugins = [\n  require('inert'), // for static files\n  require('vision'),  // for views\n  require('./plugins/root'),\n  require('./plugins/occupations'),\n  require('./plugins/validate')\n]\n\nif (!inProduction) {\n  plugins.push(require('./plugins/fileserver')) // serve static files\n  plugins.push(require('./plugins/swagger-route')) // serve swagger files\n}\n\nserver.register(plugins, (err) => {\n  if (err) {\n    return console.error('Failed to load plugin: ', err)\n  }\n  server.start((err) => {\n    if (err) {\n      return console.error('Failed to start server: ', err)\n    }\n\n    // server.plugins.swagger.setHost(server.info.host + ':' + server.info.port)\n    console.log('Server started. Host: ' + host + ', port: ' + port)\n  })\n})\n\nserver.views({\n  engines: {\n    html: require('handlebars')\n  },\n  isCached: false,\n  path: path.join(__dirname, 'views')\n})\n"],"sourceRoot":"/source/"}